//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AmigoWalletDAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AmigoWalletDBContext : DbContext
    {
        public AmigoWalletDBContext()
            : base("name=AmigoWalletDBContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Bank> Banks { get; set; }
        public virtual DbSet<Merchant> Merchants { get; set; }
        public virtual DbSet<MerchantServiceMapping> MerchantServiceMappings { get; set; }
        public virtual DbSet<MerchantServiceType> MerchantServiceTypes { get; set; }
        public virtual DbSet<MerchantTransaction> MerchantTransactions { get; set; }
        public virtual DbSet<OTP> OTPs { get; set; }
        public virtual DbSet<OTPPurpose> OTPPurposes { get; set; }
        public virtual DbSet<PaymentType> PaymentTypes { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserCard> UserCards { get; set; }
        public virtual DbSet<UserTransaction> UserTransactions { get; set; }
    
        public virtual int ufn_validateCredentials(string emailId, string password)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ufn_validateCredentials", emailIdParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_AddMoneyWithBank(string emailId, Nullable<decimal> amount)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_AddMoneyWithBank", emailIdParameter, amountParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_AddNewCard(string emailId, string cardNumber, Nullable<byte> bankId, Nullable<System.DateTime> expiryDate, Nullable<byte> statusId)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var cardNumberParameter = cardNumber != null ?
                new ObjectParameter("CardNumber", cardNumber) :
                new ObjectParameter("CardNumber", typeof(string));
    
            var bankIdParameter = bankId.HasValue ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(byte));
    
            var expiryDateParameter = expiryDate.HasValue ?
                new ObjectParameter("ExpiryDate", expiryDate) :
                new ObjectParameter("ExpiryDate", typeof(System.DateTime));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_AddNewCard", emailIdParameter, cardNumberParameter, bankIdParameter, expiryDateParameter, statusIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_RegisterUser(string emailId, string name, string password, string mobileNumber)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_RegisterUser", emailIdParameter, nameParameter, passwordParameter, mobileNumberParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_validateCredentials(string emailId, string password)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_validateCredentials", emailIdParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_WalletToBank(string emailId, Nullable<decimal> amount, string info, string remarks)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_WalletToBank", emailIdParameter, amountParameter, infoParameter, remarksParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_RedeemRewardPoints(string emailId)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_RedeemRewardPoints", emailIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_GetFullBalance(string emailId)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_GetFullBalance", emailIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_AddMoneyWithCard(string emailId, Nullable<int> cardId, Nullable<decimal> amount, string remarks)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var cardIdParameter = cardId.HasValue ?
                new ObjectParameter("CardId", cardId) :
                new ObjectParameter("CardId", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_AddMoneyWithCard", emailIdParameter, cardIdParameter, amountParameter, remarksParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_PayBills(string userEmailId, string merchantEmailId, Nullable<decimal> amount)
        {
            var userEmailIdParameter = userEmailId != null ?
                new ObjectParameter("UserEmailId", userEmailId) :
                new ObjectParameter("UserEmailId", typeof(string));
    
            var merchantEmailIdParameter = merchantEmailId != null ?
                new ObjectParameter("MerchantEmailId", merchantEmailId) :
                new ObjectParameter("MerchantEmailId", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_PayBills", userEmailIdParameter, merchantEmailIdParameter, amountParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_WalletToWallet(string fromEmailId, string toEmailId, Nullable<decimal> amount)
        {
            var fromEmailIdParameter = fromEmailId != null ?
                new ObjectParameter("FromEmailId", fromEmailId) :
                new ObjectParameter("FromEmailId", typeof(string));
    
            var toEmailIdParameter = toEmailId != null ?
                new ObjectParameter("ToEmailId", toEmailId) :
                new ObjectParameter("ToEmailId", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_WalletToWallet", fromEmailIdParameter, toEmailIdParameter, amountParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_changePassword(string emailId, string oldPassword, string newPassword)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var oldPasswordParameter = oldPassword != null ?
                new ObjectParameter("OldPassword", oldPassword) :
                new ObjectParameter("OldPassword", typeof(string));
    
            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("NewPassword", newPassword) :
                new ObjectParameter("NewPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_changePassword", emailIdParameter, oldPasswordParameter, newPasswordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_ResetPassword(string emailId, string oldPassword, string newPassword)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var oldPasswordParameter = oldPassword != null ?
                new ObjectParameter("OldPassword", oldPassword) :
                new ObjectParameter("OldPassword", typeof(string));
    
            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("NewPassword", newPassword) :
                new ObjectParameter("NewPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_ResetPassword", emailIdParameter, oldPasswordParameter, newPasswordParameter);
        }
    }
}
